# !/usr/bin/python
# -*-coding:utf-8 -*
"""
测试内容:访问区创建

步骤:
1）配置节点池设置副本数为3
2）创建存储池，使用全部磁盘
3）通过管理端cli命令创建访问区

检查项:
1）节点池创建成功
2）存储池创建成功
3）访问区创建成功
"""
import os, sys
import time
import utils_path
import Lun_managerTest
import common
import log
import get_config
import login
import decorator_func
from get_config import config_parser as cp
import env_manage_lun_manage


def setup():
    global osan
    global client_ips
    global deploy_ips
    conf_file = Lun_managerTest.CONF_FILE  # 配置文件路径
    file_name = os.path.basename(__file__)
    file_name = file_name[:-3]  # 获取本脚本名，去掉.py后缀
    log_file_path = log.get_log_path(file_name)  # 获取日志目录，即test_cases/Log/Case_log
    log.init(log_file_path, True)  # 初始化日志文件

    deploy_ips = get_config.get_env_ip_info(conf_file)  # 获取集群IP列表
    # log.info(deploy_ips)
    client_ips = get_config.get_allclient_ip()  # 获取客户端IP
    # log.info(client_ips)

    osan = Lun_managerTest.oSan()


def case():
    az_id = osan.create_access_zone(s_ip=deploy_ips[0], node_id=node_ids, name='accesszonetest')
    osan.update(s_ip=deploy_ips[0], node_ids=cp('create_node_pool', 'node_ids'), id=az_id,
                            name="update_az_name")
    decorator_func.judge_target(
        osan.get_option_single(s_ip=deploy_ips[0], command="get_access_zones", indexname="access_zones"
                               , argv2="name", ids="ids", argv1=az_id), "update_az_name")

#@decorator_func.tasklet(int(env_manage.cp('timeout', 'second')), maxretry=int(env_manage.cp('timeout', 'maxretry')))
def main():
    setup()
    env_manage_lun_manage.clean()
    case()  # 用例步骤
    common.ckeck_system()  # 检查系统状态


if __name__ == '__main__':
    main()
