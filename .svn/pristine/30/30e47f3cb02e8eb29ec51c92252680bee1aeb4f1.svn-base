#!usr/bin/env python  
# -*- coding:utf-8 _*-
""" 
@author: Liu he
@file: test.py 
@time: 2018/10/31 
"""

import os
import re
import sys
import time
import inspect
import random
import xml
import utils_path
import Lun_managerTest
import common
import common2
import commands
import breakdown
import env_manage
import log
import json
import prepare_x1000
# import prepare_x1000
import get_config
from get_config import config_parser as cp
import decorator_func
import ReliableTest
import access_env

# 初始化配置文件
conf_file = Lun_managerTest.CONF_FILE  # 配置文件路径
deploy_ips = get_config.get_env_ip_info(conf_file)  # 获取集群IP列表
client_ips = get_config.get_allclient_ip()  # 获取客户端IP

'''日志初始化'''
file_name = os.path.basename(__file__)
file_name = file_name[:-3]  # 获取本脚本名，去掉.py后缀
log_file_path = log.get_log_path(file_name)  # 获取日志目录，即test_cases/Log/Case_log

log.init(log_file_path, True)

# 类实例化
osan = Lun_managerTest.oSan()
com_lh = breakdown.Os_Reliable()
com_disk = common.Disk()
node = common.Node()
com2_osan = common2.oSan()
com_bd_disk = breakdown.disk()

node_ip1 = env_manage.deploy_ips[0]
node_ip2 = env_manage.deploy_ips[1]
node_ip3 = env_manage.deploy_ips[2]


def update_luns(s_ip=deploy_ips[0], id=None, size=None):
    """
    修改lun 名称修改为UPLUN+id号，size修改为原容量的2倍
    :param s_ip:
    :return:
    """
    lun_ids = osan.get_lun(s_ip=s_ip)
    lun_sizes = com_lh.get_lun_size_dict(lun_ids)
    if id:
        if id in lun_ids:
            pass
        else:
            log.error("The lun %s name error" % (id))
            os._exit(1)
    if type(size) == int or type(size) == str or size is None:
        log.info("check lun type of size is legal")
    else:
        log.info("lun size parameters are not legal. Error info:%s" % (type(size)))
    if id is None:
        for i in lun_ids:
            lun_name = "UPLUN" + str(i)
            lun_size = int(lun_sizes[i] * 2)
            log.info("change lun:lun name, total_bytes")
            osan.update_lun(s_ip=s_ip, lun_id=i, lun_name=lun_name, total_bytes=lun_size)
    elif type(id) == int:
        lun_name = "UPLUN" + str(id)
        lun_size = int(lun_sizes[int(id)] * 2)
        log.info("change lun:lun name, total_bytes")
        osan.update_lun(s_ip=s_ip, lun_id=int(id), lun_name=lun_name, total_bytes=lun_size)
    elif id is not None and type(id) == list:
        lun_ids = id
        for i in lun_ids:
            lun_name = "UPLUN"+str(i)
            lun_size = int(lun_sizes[i]*2)
            log.info("change lun:lun name, total_bytes")
            osan.update_lun(s_ip=s_ip, lun_id=i, lun_name=lun_name, total_bytes=lun_size)

update_luns(node_ip1)