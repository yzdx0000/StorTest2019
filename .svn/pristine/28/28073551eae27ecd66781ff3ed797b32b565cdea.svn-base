#!/usr/bin/python2.6
# -*- coding: utf-8 -*-

#######本脚本用于删除桶###########
#需要执行delete_bucket_exc，参数包括：oOss节点ip，bucket名称，certificateid
#函数返回一个元组(return_code,output)。第一个元素为0表示成功，为256表示失败；第二个元素返回命令执行打印信息

import subprocess,commands    #调用子进程执行shell命令

#添加自定义模块*****
import _create_logfile_zh    #记录日志模块
import read_conf_zh    #获取conf中变量的模块
  
#定义获取删除桶命令函数，第一个参数是桶所在数据节点的ip；第二个参数是要删除的桶名称，第三个参数是桶所有者的证书id，以字符串的形式返回删除桶的命令
def delete_bucket_cmd(ip,bucket_name,certificate_id):
    cmd='curl -i http://'+str(ip)+':20480/'+str(bucket_name)+' -X DELETE -H '+'"'+'Authorization: AWS4-HMAC-SHA256 Credential='+str(certificate_id)+'"'  #执创建行桶命令本身
    return cmd

#定义删除桶命令函数，第一个参数是桶所在数据节点的ip；第二个参数是要删除的桶名称，第三个参数是桶所有者的证书id
def delete_bucket_exc(ip,bucket_name,certificate_id):
    cmd=delete_bucket_cmd(ip,bucket_name,certificate_id)   #获取删除桶命令函数
    print cmd
    (return_code,output)=commands.getstatusoutput(cmd)
    print return_code
    print output
    return (cmd,return_code,output)
#函数自验*****
if __name__=='__main__':
    all_argvs=read_conf_zh.get_argvs()
#    delete_bucket_exc(ds_ip,bucket_name,certification_id)
    delete_bucket_exc(all_argvs['oOss_ip'],all_argvs['delete_bucket_name'],all_argvs['certificate_id'])   

